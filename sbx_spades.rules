# -*- mode: Snakemake -*-
#
# Rules for de novo assembly using aligned reads

from sunbeamlib import samtools

#### 20180410: de novo assembly only mapped reads
rule all_spades:
    input:
        expand(str(MAPPING_FP/'{genome}'/'spades'/'{sample}'/'done'), 
               genome=GenomeSegments.keys(), sample=Samples.keys())

rule sort_bam_by_name:
    input:
        str(MAPPING_FP/'intermediates'/'{genome}'/'{sample}.sam')
    output:
        str(MAPPING_FP/'{genome}'/'sortbyname'/'{sample}.bam')
    threads: 
        Cfg['sbx_spades']['threads']
    shell:
        """
        samtools view -@ {threads} -b {Cfg[mapping][samtools_opts]} {input} | \
        samtools sort -n -@ {threads} > {output}
        """

rule bam2fastq:
    input: 
        str(MAPPING_FP/'{genome}'/'sortbyname'/'{sample}.bam')
    output: 
        r1 = str(MAPPING_FP/'{genome}'/'reads'/'{sample}_1.fastq'),
        r2 = str(MAPPING_FP/'{genome}'/'reads'/'{sample}_2.fastq')
    threads: 
        Cfg['sbx_spades']['threads']
    shell:
        """
        bedtools bamtofastq -i {input} -fq {output.r1} -fq2 {output.r2}
        """

rule run_spades_paired:
    input:
       r1 = str(MAPPING_FP/'{genome}'/'reads'/'{sample}_1.fastq'),
       r2 = str(MAPPING_FP/'{genome}'/'reads'/'{sample}_2.fastq')
    output:
       str(MAPPING_FP/'{genome}'/'spades'/'{sample}'/'done')
    threads: 
      Cfg['sbx_spades']['threads']
    params: 
       outdir = str(MAPPING_FP/'{genome}'/'spades'/'{sample}')
    shell:
       """
       spades.py -1 {input.r1} -2 {input.r2} -o {params.outdir} -t {threads} -m 100 && \
       touch {output}
       """

#### The following rule is used with sbx_krakenuniq
rule run_spades_interlaced:
    input:
       str(CLASSIFY_FP/'krakenhll'/'42789'/'{sample}.fastq'),
    output:
       str(CLASSIFY_FP/'krakenhll'/'42789'/'spades'/'{sample}'/'done')
    threads: 
      Cfg['sbx_spades']['threads']
    params: 
       outdir = str(CLASSIFY_FP/'krakenhll'/'42789'/'spades'/'{sample}')
    shell:
       """
       spades.py --12 {input} -o {params.outdir} -t {threads} -m 100 && \
       touch {output}
       """
